#!/bin/bash
set -e # exit on command errors (so you MUST handle exit codes properly!)

INPUT_FOLDER=""
OUTPUT_FOLDER="table"
LABEL="M"
CURR_DIR=$(dirname "$0")
FEATURES_DIR="$CURR_DIR/features_list"
SCRIPT_PATH="$CURR_DIR/build_table.py"

usage() {
	echo "Usage: $0 [-i input_folder] [-o output_folder]" 1>&2
	exit 1
}

while getopts ":i::o::l::h" opt; do
	case "${opt}" in
	i)
		INPUT_FOLDER=${OPTARG}
		;;
	o)
		OUTPUT_FOLDER=${OPTARG}
		;;
	l)
		LABEL=${OPTARG}
		;;
	*)
		usage #Help
		;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$INPUT_FOLDER" ]; then
	echo "Input folder=[$INPUT_FOLDER] does not exist"
	exit 1
fi

if [ ! -d "$OUTPUT_FOLDER" ]; then
	mkdir -p "$OUTPUT_FOLDER"
fi

# all features "activities" "apis" "broadcasts" "contents" "hardwares" "intents" "permissions" "services" "urls"
declare -a FEATURES=("activities" "apis" "broadcasts" "contents" "hardwares" "intents" "permissions" "services" "urls")

for FEATURE in "${FEATURES[@]}"; do
	if [ -z "$INPUT_FOLDER" ]; then
		echo "${INPUT_FOLDER}/${FEATURE} does not exist"
	else
		python3 "$SCRIPT_PATH" -f "${FEATURES_DIR}/${FEATURE}_features_all.txt" -i "${INPUT_FOLDER}/${FEATURE}" -o "${OUTPUT_FOLDER}/table_${FEATURE}" -l "$LABEL"
		echo "$FEATURE done"
	fi
done
