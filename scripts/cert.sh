#!/bin/bash
#set -e          # exit on command errors (so you MUST handle exit codes properly!)

##
# This script uses apksigner to extract certificate information
# Below is an example of the output format from apksigner
# apksigner verify --print-certs samples/com.instagram.android.apk
# Signer #1 certificate DN: CN=Kevin Systrom, O=Instagram Inc, L=San Francisco, ST=California, C=US
# Signer #1 certificate SHA-256 digest: 5f3e50f435583c9ae626302a71f7340044087a7e2c60adacfc254205a993e305
# Signer #1 certificate SHA-1 digest: c56fb7d591ba6704df047fd98f535372fea00211
# Signer #1 certificate MD5 digest: f9cf2124dfaaccc45e7e3f739eca55ae
INPUT_FOLDER="samples"
OUTPUT_FOLDER="output"
OUT_PATH="certificate"
OUT_FILE="certs.csv"
CSV_HEADER="apk,name,org_unit,org,location,state,country,sha256,sha1,md5"

usage() { echo "Usage: $0 [-i input_folder] [-o output_folder]" 1>&2; exit 0; }
checkInput () {
    CERT="$1"

    DNSTRING=$(echo $CERT | grep -oP "(?<=DN: ).*")
    #echo "DN=$DNSTRING"
    NAMESTR=$(echo $DNSTRING | grep -oP '(?<=CN=")([\s\S]*?)(?=")')
    #echo "NAMESTR=$NAMESTR"
    if [[ ! -n $NAMESTR ]]; then
        #echo "in"
        local NAME=$(echo $DNSTRING | grep -oP '(?<=CN=)(.*?)(?=, )' |  sed 's/,/ /')
        #echo "NAME=$NAME"
        local ORGUNIT=$(echo $DNSTRING | grep -oP '(?<=OU=)(.*?)(?=[,|$|\n])' | sed 's/,/ /')
        #echo "ORGU=$ORGUNIT"
        local ORG=$(echo $DNSTRING | grep -oP '(?<=O=)(.*?)(?=[,|$|\n])' | sed 's/,/ /')
        #echo "ORG=$ORG"
        local STATE=$(echo $DNSTRING | grep -oP '(?<=ST=)(.*?)(?=[,|$|\n])' | sed 's/,/ /')
        #echo "STATE=$STATE"
        local LOCATION=$(echo $DNSTRING | grep -oP '(?<=L=)(.*?)(?=[,|$|\n])' | sed 's/,/ /')
        #echo "LOC=$LOCATION"
        local COUNTRY=$(echo $DNSTRING | grep -oP '(?<=C=)[a-zA-Z]*' | sed 's/,/ /')
        #echo "COUN=$COUNTRY"
    else
        #The common name (CN) is a quoted string, e.g. CN="org O="
        local NAME=$NAMESTR
        local ORGUNIT=$(echo $NAMESTR | grep -oP '(?<=OU=)(.*?)(?= )' | sed 's/,/ /')
        #echo "ORGU=$ORGUNIT"
        local ORG=$(echo $NAMESTR | grep -oP '(?<=O=)(.*?)(?= |$)' | sed 's/,/ /')
        #echo "ORG=$ORG"
        local STATE=$(echo $NAMESTR | grep -oP '(?<=ST=)(.*?)(?= |$)' | sed 's/,/ /')
        #echo "STATE=$STATE"
        local LOCATION=$(echo $NAMESTR | grep -oP '(?<=L=)(.*?)(?= |$)' | sed 's/,/ /')
        #echo "LOC=$LOCATION"
        local COUNTRY=$(echo $NAMESTR | grep -oP '(?<=C=)(.*?)(?= |$)' | sed 's/,/ /')
        #echo "COUN=$COUNTRY"
    fi

    local SHA1=$(echo $CERT | grep -oP "(?<=SHA-1 digest: )[^ ]*")
    local SHA256=$(echo $CERT | grep -oP "(?<=SHA-256 digest: )[^ ]*")
    local MD5=$(echo $CERT | grep -oP "(?<=MD5 digest: )[^ ]*")
    local DATA="$NAME,$ORGUNIT,$ORG,$LOCATION,$STATE,$COUNTRY,$SHA256,$SHA1,$MD5\n"

    echo $DATA
}
while getopts ":i::o::h" opt; do
    case "${opt}" in
        i)
            INPUT_FOLDER=${OPTARG}
            ;;
        o)
            {OUTPUT_FOLDER}=${OPTARG}
            ;;
        *)
            usage #Help
            ;;
    esac
done
shift $((OPTIND-1))

if ! type "apksigner" > /dev/null; then
    echo "apksigner not found."
    exit 1
fi

if [ -z "$INPUT_FOLDER" ]; then
    exit 1
fi

#check existance output dir
if [ ! -d "${OUTPUT_FOLDER}/${OUT_PATH}" ]; then
    mkdir -p "${OUTPUT_FOLDER}/${OUT_PATH}"
fi
CERT_FILE=${OUTPUT_FOLDER}/${OUT_PATH}/${OUT_FILE}
if [ ! -s $CERT_FILE ]; then
    $(printf "${CSV_HEADER}\n" >> $CERT_FILE)
fi

FILES="$INPUT_FOLDER/*.apk"
for file in $FILES
do
    # get apk name
    FILENAME=$(basename "$file")
    #Get the certificate info with apksigner
    CERT=$(apksigner verify --print-certs $file)
    DATA=$(checkInput "$CERT")

    $(printf "${FILENAME},${DATA}" >> $CERT_FILE)
done

